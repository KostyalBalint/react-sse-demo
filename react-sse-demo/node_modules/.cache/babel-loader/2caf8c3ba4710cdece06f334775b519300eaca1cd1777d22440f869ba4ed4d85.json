{"ast":null,"code":"var _jsxFileName = \"/Users/kostyalbalint/Documents/fun/react-sse/react-sse-demo/src/serverEvents/ServerEventsProvider.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ServerEventsContext = /*#__PURE__*/createContext({});\nexport const ServerEventsProvider = props => {\n  _s();\n  const [serverEvents, setServerEvents] = useState();\n  useEffect(() => {\n    return () => {\n      setServerEvents(new EventSource(props.url, {\n        withCredentials: props.withCredentials\n      }));\n    };\n  }, [props.url, props.withCredentials]);\n  return /*#__PURE__*/_jsxDEV(ServerEventsContext.Provider, {\n    value: serverEvents,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ServerEventsProvider, \"Ia2eRPK1yqVeqNvX4U6YolkZnKM=\");\n_c = ServerEventsProvider;\nvar _c;\n$RefreshReg$(_c, \"ServerEventsProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ServerEventsContext","ServerEventsProvider","props","_s","serverEvents","setServerEvents","EventSource","url","withCredentials","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kostyalbalint/Documents/fun/react-sse/react-sse-demo/src/serverEvents/ServerEventsProvider.tsx"],"sourcesContent":["import React, {\n  createContext,\n  PropsWithChildren,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\n\nexport interface ServerEventsContextValue extends EventSource {}\n\nexport const ServerEventsContext = createContext<ServerEventsContextValue>(\n  {} as ServerEventsContextValue,\n);\n\ninterface EventsProviderProps {\n  url: string;\n  withCredentials?: boolean;\n}\n\nexport const ServerEventsProvider = (\n  props: PropsWithChildren<EventsProviderProps>,\n) => {\n  const [serverEvents, setServerEvents] = useState<EventSource>();\n\n  useEffect(() => {\n    return () => {\n      setServerEvents(\n        new EventSource(props.url, { withCredentials: props.withCredentials }),\n      );\n    };\n  }, [props.url, props.withCredentials]);\n\n  return (\n    <ServerEventsContext.Provider value={serverEvents}>\n      {props.children}\n    </ServerEventsContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IACVC,aAAa,EAEbC,SAAS,EAETC,QAAQ,QACH,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIf,OAAO,MAAMC,mBAAmB,gBAAGL,aAAa,CAC9C,CAAC,CACH,CAAC;AAOD,OAAO,MAAMM,oBAAoB,GAC/BC,KAA6C,IAC1C;EAAAC,EAAA;EACH,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAc,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXS,eAAe,CACb,IAAIC,WAAW,CAACJ,KAAK,CAACK,GAAG,EAAE;QAAEC,eAAe,EAAEN,KAAK,CAACM;MAAgB,CAAC,CACvE,CAAC;IACH,CAAC;EACH,CAAC,EAAE,CAACN,KAAK,CAACK,GAAG,EAAEL,KAAK,CAACM,eAAe,CAAC,CAAC;EAEtC,oBACET,OAAA,CAACC,mBAAmB,CAACS,QAAQ;IAACC,KAAK,EAAEN,YAAa;IAAAO,QAAA,EAC/CT,KAAK,CAACS;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC,CAAC;AAACZ,EAAA,CAlBWF,oBAAoB;AAAAe,EAAA,GAApBf,oBAAoB;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}