{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport const useEventStream = props => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState();\n  useEffect(() => {\n    const eventSource = new EventSource(props.url);\n    eventSource.onopen = () => {\n      setIsOpen(true);\n      setError(null);\n    };\n    eventSource.onerror = () => {\n      setIsOpen(false);\n      setError(\"EventSource failed.\");\n    };\n    eventSource.onmessage = event => {\n      const data = props.parser ? props.parser(event.data) : JSON.parse(event.data);\n      setData(data);\n    };\n    return () => {\n      eventSource.close();\n    };\n  });\n  return {\n    isOpen,\n    error,\n    data\n  };\n};\n_s(useEventStream, \"VdNKHg+eyHX/T+bM1UxEVvRYJI4=\");","map":{"version":3,"names":["useEffect","useState","useEventStream","props","_s","isOpen","setIsOpen","error","setError","data","setData","eventSource","EventSource","url","onopen","onerror","onmessage","event","parser","JSON","parse","close"],"sources":["/Users/kostyalbalint/Documents/fun/react-sse/react-sse-demo/src/hooks/useEventStream.ts"],"sourcesContent":["import {useEffect, useState} from \"react\";\n\ntype EventStreamProps<T> = {\n    url: string;\n    parser?: (data: string) => T;\n}\n\ntype EventSource<T> = {\n    isOpen: boolean;\n    error: string | null;\n    data?: T\n}\n\nexport const useEventStream = <T>(props: EventStreamProps<T>): EventSource<T>  => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [data, setData] = useState<T | undefined>();\n\n    useEffect(() => {\n        const eventSource = new EventSource(props.url);\n        eventSource.onopen = () => {\n            setIsOpen(true);\n            setError(null);\n        }\n        eventSource.onerror = () => {\n            setIsOpen(false);\n            setError(\"EventSource failed.\");\n        }\n\n        eventSource.onmessage = (event) => {\n            const data = props.parser ? props.parser(event.data) : JSON.parse(event.data);\n            setData(data);\n        }\n        return () => {\n            eventSource.close();\n        }\n    })\n\n\n    return {\n        isOpen,\n        error,\n        data,\n    }\n}"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAazC,OAAO,MAAMC,cAAc,GAAOC,KAA0B,IAAsB;EAAAC,EAAA;EAC9E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAgB,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZ,MAAMW,WAAW,GAAG,IAAIC,WAAW,CAACT,KAAK,CAACU,GAAG,CAAC;IAC9CF,WAAW,CAACG,MAAM,GAAG,MAAM;MACvBR,SAAS,CAAC,IAAI,CAAC;MACfE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC;IACDG,WAAW,CAACI,OAAO,GAAG,MAAM;MACxBT,SAAS,CAAC,KAAK,CAAC;MAChBE,QAAQ,CAAC,qBAAqB,CAAC;IACnC,CAAC;IAEDG,WAAW,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC/B,MAAMR,IAAI,GAAGN,KAAK,CAACe,MAAM,GAAGf,KAAK,CAACe,MAAM,CAACD,KAAK,CAACR,IAAI,CAAC,GAAGU,IAAI,CAACC,KAAK,CAACH,KAAK,CAACR,IAAI,CAAC;MAC7EC,OAAO,CAACD,IAAI,CAAC;IACjB,CAAC;IACD,OAAO,MAAM;MACTE,WAAW,CAACU,KAAK,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,CAAC;EAGF,OAAO;IACHhB,MAAM;IACNE,KAAK;IACLE;EACJ,CAAC;AACL,CAAC;AAAAL,EAAA,CA/BYF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}