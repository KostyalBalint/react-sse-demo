{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { ServerEventsContext } from \"./ServerEventsProvider\";\nexport const useServerEvents = () => {\n  _s();\n  //const [subscriberID, setSubscriberID] = useState<number>(0);\n  const [eventData, setEventData] = useState();\n\n  //const formatEvent = `@sse-lib/${eventType}`\n\n  const eventSource = useContext(ServerEventsContext);\n  if (!eventSource) {\n    throw new Error(`To use \"useServerEvents()\" wrap your application in provider:\n        <ServerEventsProvider>\n          <YourApp />\n        </ServerEventsProvider>\n    `);\n  }\n  eventSource.onmessage = event => {\n    const data = JSON.parse(event.data);\n    setEventData(data);\n  };\n  return {\n    data: eventData\n  };\n};\n_s(useServerEvents, \"p+dNOcX85vrbPUNOLWXM7grJ1Ng=\");","map":{"version":3,"names":["useContext","useState","ServerEventsContext","useServerEvents","_s","eventData","setEventData","eventSource","Error","onmessage","event","data","JSON","parse"],"sources":["/Users/kostyalbalint/Documents/fun/react-sse/react-sse-demo/src/serverEvents/useServerEvents.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { ServerEventsContext } from \"./ServerEventsProvider\";\n\nexport interface ProcessingResult<T> {\n  data: T | undefined;\n}\n\nexport const useServerEvents = <T extends object>(): ProcessingResult<T> => {\n  //const [subscriberID, setSubscriberID] = useState<number>(0);\n  const [eventData, setEventData] = useState<T>();\n\n  //const formatEvent = `@sse-lib/${eventType}`\n\n  const eventSource = useContext(ServerEventsContext);\n\n  if (!eventSource) {\n    throw new Error(`To use \"useServerEvents()\" wrap your application in provider:\n        <ServerEventsProvider>\n          <YourApp />\n        </ServerEventsProvider>\n    `);\n  }\n\n  eventSource.onmessage = (event) => {\n    const data = JSON.parse(event.data);\n    setEventData(data);\n  };\n\n  return {\n    data: eventData,\n  };\n};\n"],"mappings":";AAAA,SAASA,UAAU,EAAaC,QAAQ,QAAQ,OAAO;AACvD,SAASC,mBAAmB,QAAQ,wBAAwB;AAM5D,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAA6C;EAAAC,EAAA;EAC1E;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAI,CAAC;;EAE/C;;EAEA,MAAMM,WAAW,GAAGP,UAAU,CAACE,mBAAmB,CAAC;EAEnD,IAAI,CAACK,WAAW,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAE;AACrB;AACA;AACA;AACA,KAAK,CAAC;EACJ;EAEAD,WAAW,CAACE,SAAS,GAAIC,KAAK,IAAK;IACjC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;IACnCL,YAAY,CAACK,IAAI,CAAC;EACpB,CAAC;EAED,OAAO;IACLA,IAAI,EAAEN;EACR,CAAC;AACH,CAAC;AAACD,EAAA,CAxBWD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}